name: Backend CI and Release

on:
  pull_request:
    paths:
      - 'cmd/**'
      - 'internal/**'
      - 'go.mod'
      - 'go.sum'
      - 'Dockerfile'
      - 'helm/ganje/**'
      - '.github/workflows/backend.yml'
  push:
    branches: [ main ]
    paths:
      - 'cmd/**'
      - 'internal/**'
      - 'go.mod'
      - 'go.sum'
      - 'Dockerfile'
      - 'helm/ganje/**'
      - '.github/workflows/backend.yml'
    tags:
      - 'api-v*'

permissions:
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Go vet
        run: go vet ./...
      - name: Go test
        run: go test ./... -coverprofile=coverage.out
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: coverage.out

  integration-tests:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Ensure script permissions
        run: |
          chmod +x scripts/it/wait-for-http.sh
          chmod +x scripts/it/integration-tests.sh
      - name: Run docker-compose integration tests
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker version
          docker compose version
          ./scripts/it/integration-tests.sh

  build-binary:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Build
        run: |
          CGO_ENABLED=0 go build -o ganje ./cmd/main.go
      - uses: actions/upload-artifact@v4
        with:
          name: ganje-linux-amd64
          path: ganje

  docker:
    if: startsWith(github.ref, 'refs/tags/api-v') || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract tags
        id: meta
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/ganje-backend
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=sha-${GITHUB_SHA::7}
          fi
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          tags: |
            ${{ steps.meta.outputs.image }}:${{ steps.meta.outputs.version }}
            ${{ steps.meta.outputs.image }}:latest

  helm-chart:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4
      - name: Helm lint (backend chart)
        run: helm lint helm/ganje
      - name: Package Helm chart
        run: |
          mkdir -p packaged-charts
          helm package helm/ganje --destination packaged-charts
      - name: Upload Helm chart artifact
        uses: actions/upload-artifact@v4
        with:
          name: ganje-backend-chart
          path: packaged-charts/*.tgz
